#pragma checksum "D:\Github Repolarım\Dapper.Contrib-CRUD-Example\Dapper.Contrib-CRUD-Example\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "84028d4b5802c2d69c48a670d0f8fefc94e476d3"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Github Repolarım\Dapper.Contrib-CRUD-Example\Dapper.Contrib-CRUD-Example\Views\_ViewImports.cshtml"
using Dapper.Contrib_CRUD_Example;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Github Repolarım\Dapper.Contrib-CRUD-Example\Dapper.Contrib-CRUD-Example\Views\_ViewImports.cshtml"
using Dapper.Contrib_CRUD_Example.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"84028d4b5802c2d69c48a670d0f8fefc94e476d3", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4e25e85f42998a9daf0fc54b26de2eb0ab3656fb", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<Users>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Scripts/moment.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/jquery-validation/dist/jquery.validate.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Js/jquery.unobtrusive-ajax.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 3 "D:\Github Repolarım\Dapper.Contrib-CRUD-Example\Dapper.Contrib-CRUD-Example\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<!-- JQuery DataTable Css -->
<link href=""/plugins/jquery-datatable/skin/bootstrap/css/dataTables.bootstrap.min.css"" rel=""stylesheet"" />

<!-- Jquery DataTable Plugin Js -->
<script src=""/plugins/jquery-datatable/jquery.dataTables.js""></script>
<script src=""/plugins/jquery-datatable/skin/bootstrap/js/dataTables.bootstrap.js""></script>

<!-- Jquery Moment Plugin Js -->
");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "84028d4b5802c2d69c48a670d0f8fefc94e476d35394", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n<!-- Jquery UnOnbtrusive Ajax Plugin Js -->\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "84028d4b5802c2d69c48a670d0f8fefc94e476d36484", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "84028d4b5802c2d69c48a670d0f8fefc94e476d37523", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "84028d4b5802c2d69c48a670d0f8fefc94e476d38562", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"

<section class=""content"">
    <div class=""container-fluid"">
        <div class=""col-lg-3 col-md-3 col-sm-6 col-xs-12"" id=""UsersCreateOrUpdateView"">
            <div class=""info-box bg-pink hover-expand-effect"" style=""text-decoration: none; cursor: pointer;"">
                <div class=""icon"">
                    <i class=""material-icons"">note_add</i>
                </div>
                <div class=""content"">
                    <div class=""text""><b>KULLANICI EKLE</b></div>
                </div>
            </div>
        </div>

        <div class=""col-lg-3 col-md-3 col-sm-6 col-xs-12"">
            <div class=""info-box bg-purple hover-expand-effect"">
                <div class=""icon"">
                    <i class=""material-icons"">trending_up</i>
                </div>
                <div class=""content"">
                    <div class=""text"">TOPLAM KULLANICI SAYISI</div>
                    <div class=""number count-to"" id=""UsersCount"" data-from=""0"" data-to=""0"" data-speed=""1000"" dat");
            WriteLiteral(@"a-fresh-interval=""20""></div>
                </div>
            </div>

        </div>
        <div class=""col-lg-3 col-md-3 col-sm-6 col-xs-12"">
            <div class=""info-box bg-green hover-expand-effect"">
                <div class=""icon"">
                    <i class=""material-icons"">thumb_up</i>
                </div>
                <div class=""content"">
                    <div class=""text"">AKTİF KULLANICI SAYISI</div>
                    <div class=""number count-to"" id=""UsersActiveCount"" data-from=""0"" data-to="""" data-speed=""1000"" data-fresh-interval=""20""></div>
                </div>
            </div>
        </div>

        <div class=""col-lg-3 col-md-3 col-sm-6 col-xs-12"">
            <div class=""info-box bg-orange hover-expand-effect"">
                <div class=""icon"">
                    <i class=""material-icons"">thumb_down</i>
                </div>
                <div class=""content"">
                    <div class=""text"">PASİF KULLANICI SAYISI</div>
                ");
            WriteLiteral(@"    <div class=""number count-to"" id=""UsersPassiveCount"" data-from=""0"" data-to="""" data-speed=""1000"" data-fresh-interval=""20""></div>
                </div>
            </div>
        </div>
        <!-- Basic Examples -->
        <div class=""row clearfix js-sweetalert"">
            <div class=""col-lg-12 col-md-12 col-sm-12 col-xs-12"">
                <div class=""card"">
                    <div class=""header"">
                        <h2>
                            KULLANICI YÖNETİMİ
                        </h2>
                    </div>
                    <div class=""body"">
                        <div class=""table"">
                            <table id=""datatable"" class=""table table-bordered table-striped table-hover"">
                                <thead>
                                    <tr>
                                        <th>Adı</th>
                                        <th>Soyadı</th>
                                        <th>E-Maili</th>
                       ");
            WriteLiteral(@"                 <th>Cinsiyeti</th>
                                        <th>İp Adresi</th>
                                        <th>Oluşturulma Tarihi</th>
                                        <th>Durum</th>
                                        <th>İşlemler</th>
                                    </tr>
                                </thead>
                                <tbody>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- #END# Basic Examples -->
        <div id=""modalForm"">
            <!-- Pop-up form verileri gelecek (Ekleme,güncelleme) -->
        </div>
    </div>
</section>

<script type=""text/javascript"">

    var table = $('#datatable').DataTable({
        ""processing"": true,
        ""serverSide"": true,
        ""filter"": true,
        ""order"": [5, 'desc'],
        ""lengthMenu"": [[10, 25, 50, 100, ");
            WriteLiteral(@"-1], [10, 25, 50, 100, ""Hepsi""]],
        ""ajax"": {
            ""url"": ""/Home/LoadTable"",
            ""type"": ""POST"",
            ""dataType"": ""json""
        },
        ""initComplete"": function (settings, json) {
            $('#UsersCount').countTo({ from: 0, to: json.recordsTotal });
            $('#UsersActiveCount').countTo({ from: 0, to: json.activeRecords });
            $('#UsersPassiveCount').countTo({ from: 0, to: json.passiveRecords });
        },
        ""columns"": [
            {
                data: ""name"",
                render: function (data, type, row) {
                    return ""<td>"" + data + ""</td>"";
                }
            },
            {
                data: ""lastName"",
                render: function (data, type, row) {
                    return ""<td>"" + data + ""</td>"";
                }
            },
            {
                data: ""email"",
                render: function (data, type, row) {
                    return ""<td>"" + data + ""</td>");
            WriteLiteral(@""";
                }
            },
            {
                data: ""gender"",
                render: function (data, type, row) {
                    return ""<td>"" + data + ""</td>"";
                }
            },
            {
                data: ""ipAddress"",
                render: function (data, type, row) {
                    return ""<td>"" + data + ""</td>"";
                }
            },
            {
                data: ""date"",
                render: function (data, type, row) {
                    return ""<td>"" + moment(data).format(""DD/MM/YYYY"") + ""</td>"";
                }
            },
            {
                render: function (data, type, row) {
                    if (row[""isActive""] === true) return ""<td><i class='material-icons bg-green'>check</i></td>"";
                    if (row[""isActive""] === false) return ""<td><i class='material-icons bg-red'>close</i></td>"";
                }
            },
            {
                render: function (dat");
            WriteLiteral(@"a, type, row) {
                    if (row[""isActive""] === true) {
                        return ""<td><button type='button' class='btn bg-green waves-effect' id='pasif' data-id="" + row[""isActive""] + "" data-target="" + row[""rowGuid""] + ""> <i class='material-icons'>thumb_up</i> Aktif </button>   "" +
                            ""<button type='button' data-id='"" + row[""rowGuid""] + ""' id='UsersCreateOrUpdateView' style = 'margin-left: 1px;' class='btn bg-purple waves-effect'><i class='material-icons'>edit</i> Düzenle </a>   "" +
                            ""<button type='button' id='sil' data-id='"" + row[""rowGuid""] + ""' class='btn bg-red waves-effect'><i class='material-icons'>delete</i>Sil</button><td>"";
                    }
                    if (row[""isActive""] === false) {
                        return ""<td><button type='button' class='btn bg-orange waves-effect' id='aktif' data-id="" + row[""isActive""] + "" data-target="" + row[""rowGuid""] + ""> <i class='material-icons'>thumb_down</i> Pasif </button>   """);
            WriteLiteral(@" +
                            ""<button type='button' data-id='"" + row[""rowGuid""] + ""' id='UsersCreateOrUpdateView' style = 'margin-left: 1px;' class='btn bg-purple waves-effect'><i class='material-icons'>edit</i> Düzenle </a>   "" +
                            ""<button type='button' id='sil' data-id='"" + row[""rowGuid""] + ""' class='btn bg-red waves-effect'><i class='material-icons'>delete</i>Sil</button><td>"";
                    }
                }
            }
        ]
    }); // datatable ajax ile dolduruyoruz.

    $(document).on(""click"", ""#pasif, #aktif"", function () {
        var RowGuid = $(this).data(""target"");
        $.ajax({
            url: ""/Home/ActiveControl/"" + RowGuid,
            type: 'POST',
            data: { RowGuid },
            success: function (data) {
                table.ajax.reload(null, false); // işlem success ise datatable ajax'ı tekrardan çağır.
                if (data.isActive) {
                    swal.fire({
                        title: 'Aktif Old");
            WriteLiteral(@"u !',
                        type: 'success'
                    });
                    $('#UsersActiveCount').countTo({ from: 0, to: table.ajax.json().activeRecords + 1 }); // aktif olduysa toplam aktif sayısını 1 artır.
                    $('#UsersPassiveCount').countTo({ from: 0, to: table.ajax.json().passiveRecords - 1 }); // aktif olduysa toplam pasif sayısını 1 azalt.
                }
                else {
                    swal.fire({
                        title: 'Pasif Oldu !',
                        type: 'error'
                    });
                    $('#UsersActiveCount').countTo({ from: 0, to: table.ajax.json().activeRecords - 1 }); // pasif olduysa toplam aktif sayısını 1 azalt.
                    $('#UsersPassiveCount').countTo({ from: 0, to: table.ajax.json().passiveRecords + 1 }); // pasif olduysa toplam pasif sayısını 1 artır.
                }
            },
            error: function (data) {
                swal.fire({
                    title: 'İşlem Ger");
            WriteLiteral(@"çekleşmedi !',
                    type: 'warning'
                });
            }
        });
    }); // aktiflik pasiflik durumlarını güncelliyoruz.

    $(document).on('click', '#sil', function () {
        var item = $(this);
        var RowGuid = item.data(""id"");
        swal.fire({
            title: 'Silinecek!',
            text: ""Silmek istediğinize emin misiniz?"",
            type: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#ea3c07',
            confirmButtonText: 'Evet, sil!',
            cancelButtonText: 'İptal!'
        }).then((result) => {
            if (result.value) { // Evet, sil! butonuna basıldıysa
                $.ajax({
                    url: ""/Home/Delete/"" + RowGuid,
                    method: 'POST',
                    data: { RowGuid },
                    success: function (data) {
                        if (data.isActive) {
                            swal.fire('Silindi!', 'silindi', 'success');
             ");
            WriteLiteral(@"               setTimeout(function () {
                                swal.close();
                                item.closest(""tr"").fadeOut(1000, function () {
                                    item.closest(""tr"").remove();
                                });
                            }, 1000); // tabloda ki ilgili satırı 1 saniyelik sürede fadeOut şeklinde sil.
                            setTimeout(function () {
                                table.ajax.reload(null, false); // işlem success ise datatable ajax'ı tekrardan çağır.
                                $('#UsersCount').countTo({ from: 0, to: table.ajax.json().recordsTotal - 1 }); // silinme işlemi gerçekleştiyse toplam sayısını 1 azalt.
                            }, 2000);
                        }
                        else {
                            swal.fire({
                                title: 'Hata oldu silinemedi !',
                                type: 'error'
                            });
                ");
            WriteLiteral(@"        }
                    },
                    error: function (data) {
                        swal.fire({
                            title: 'İşlem Gerçekleşmedi !',
                            type: 'warning'
                        });
                    }
                });
            }
            else {
                swal.fire('İptale Basıldı!', 'silinemedi', 'error');
            }
        });
    }); // silme işlemi için ajax eventi.

    $(document).on('click', '#UsersCreateOrUpdateView', function () {
        var RowGuid = $(this).data(""id""); // Guid id'yi data-id'den al.
        $('#modalForm').load('/Home/CreateOrUpdate/' + RowGuid); // Oluşturulan partial view'i div'in içine bas ve parametre olarak RowGuid değerini controller'a taşı.
    });

</script>

");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<Users> Html { get; private set; }
    }
}
#pragma warning restore 1591
